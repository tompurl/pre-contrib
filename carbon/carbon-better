#!/bin/sh

#set -x

############################################################################## 
#
# This is my attempt at creating an init script for carbon-cache.py. It is
#>based on the hobbit init script in Ubuntu 10.04.
#
############################################################################## 

### BEGIN INIT INFO
# Provides:          carbon-cache
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the Carbon listener that writes to Whisper db.
### END INIT INFO

GRAPHITE_HOME=/opt/graphite
PIDFILE=$GRAPHITE_HOME/storage/carbon-cache.pid
DAEMON=/usr/bin/python
CARBON_USER=www-data
NAME="carbon-cache"
DESC="Carbon-cache Listener"
CC_SCRIPT=$GRAPHITE_HOME/bin/carbon-cache.py
DAEMON_ARGS=$CC_SCRIPT
DAEMON_ARGS="$DAEMON_ARGS --logdir=$GRAPHITE_HOME/storage/log/carbon-cache"
DAEMON_ARGS="$DAEMON_ARGS --pidfile=$PIDFILE"
DAEMON_ARGS="$DAEMON_ARGS start"

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

### Tests to see it the daemon is running
# 0 => Running
# 1 => Stale pidfile and dead process
# 2 => Not running
is_proc_up() {
    retval=2
    if test -s $PIDFILE
    then
        kill -0 `cat $PIDFILE`
        if test $? -eq 0
        then
            retval=0
        else
            retval=1
        fi
    else
        retval=2
    fi
    return $retval
}

case "$1" in
   "start")
        #Delete PIDFILE if the process is dead
        is_proc_up
        if [ $? -eq 1 ]; then
            log_daemon_msg "Deleting stale pid file" "$NAME"
            rm $PIDFILE
        fi

	log_daemon_msg "Starting $DESC" "$NAME"
	start-stop-daemon --exec $DAEMON --chuid $CARBON_USER --start \
		--pidfile=$PIDFILE \
                --chdir $GRAPHITE_HOME \
                -- $DAEMON_ARGS
	log_end_msg $?
	;;

   "stop")
	log_daemon_msg "Stopping $DESC" "$NAME"
	start-stop-daemon --pidfile $PIDFILE --stop --retry 5
	log_end_msg $?
	;;

   "status2")
        is_proc_up
        retcode=$?
        case "$retcode" in
            0)
                # TODO proc running
                ;;
            1)
                # TODO stale pid
                ;;
            2)
                # TODO dead process
                ;;
        esac
        ;;

   "status")
        # FIXME
	if test -s $PIDFILE
	then
		kill -0 `cat $PIDFILE`
		if test $? -eq 0
		then
			echo "carbon-cache.py running with PID `cat $PIDFILE`"
			exit 0
		else
			echo "carbon-cache.py is not running, removing stale PID file"
			rm -f $PIDFILE
			exit 1
		fi
	else
		echo "carbon-cache.py does not appear to be running"
		exit 3
	fi
	;;

   "restart")
        # FIXME
	if test -s $PIDFILE
	then
		$0 stop
		sleep 1
		$0 start
	else
		log_action_msg "carbon-cache.py does not appear to be running, starting it"
		$0 start
	fi
	;;

   "reload"|"force-reload")
        # FIXME
	if test -s $PIDFILE
	then
		log_action_msg "Reloading carbon-cache config"
		kill -HUP `cat $PIDFILE`
	else
		log_action_msg "carbon-cache.py is not running (no PID file)"
	fi
	;;
   *)
   	echo "Usage: $0 start|stop|restart|force-reload|reload|status"
	break;
esac

exit 0

